/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const ErrorLayout: typeof import('@/layouts/ErrorLayout.tsx')['ErrorLayout']
  const Footer: typeof import('@/components/Footer.tsx')['Footer']
  const Header: typeof import('@/components/Header.tsx')['Header']
  const HomeLayout: typeof import('@/layouts/HomeLayout.tsx')['HomeLayout']
  const LayoutsErrorLayout: typeof import('@/layouts/ErrorLayout.tsx')['ErrorLayout']
  const LayoutsHomeLayout: typeof import('@/layouts/HomeLayout.tsx')['HomeLayout']
  const counterActions: typeof import('./src/store/counter')['counterActions']
  const counterReducers: typeof import('./src/store/counter')['counterReducers']
  const createRef: typeof import('react')['createRef']
  const forwardRef: typeof import('react')['forwardRef']
  const getSystemDefaultMode: typeof import('./src/hooks/useDark')['getSystemDefaultMode']
  const lazy: typeof import('react')['lazy']
  const memo: typeof import('react')['memo']
  const startTransition: typeof import('react')['startTransition']
  const store: typeof import('./src/store/index')['store']
  const storePersistor: typeof import('./src/store/index')['storePersistor']
  const uiActions: typeof import('./src/store/ui')['uiActions']
  const uiReducers: typeof import('./src/store/ui')['uiReducers']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useCounter: typeof import('usehooks-ts')['useCounter']
  const useDark: typeof import('./src/hooks/useDark')['useDark']
  const useDarkMode: typeof import('./src/hooks/useDark')['useDarkMode']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useEffect: typeof import('react')['useEffect']
  const useHref: typeof import('react-router')['useHref']
  const useId: typeof import('react')['useId']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInRouterContext: typeof import('react-router')['useInRouterContext']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useLocation: typeof import('react-router')['useLocation']
  const useMemo: typeof import('react')['useMemo']
  const useNProgress: typeof import('./src/hooks/useNprogress')['useNProgress']
  const useNavigate: typeof import('react-router')['useNavigate']
  const useNavigationType: typeof import('react-router')['useNavigationType']
  const useOutlet: typeof import('react-router')['useOutlet']
  const useOutletContext: typeof import('react-router')['useOutletContext']
  const useParams: typeof import('react-router')['useParams']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useResolvedPath: typeof import('react-router')['useResolvedPath']
  const useRoutes: typeof import('react-router')['useRoutes']
  const useState: typeof import('react')['useState']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTransition: typeof import('react')['useTransition']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { RootState } from './src/store/index'
  import('./src/store/index')
}
